% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WorkflowScriptExporter.R
\name{exportTLFWorkflowToEPackage}
\alias{exportTLFWorkflowToEPackage}
\title{Export TLF Workflow to E-Package}
\usage{
exportTLFWorkflowToEPackage(
  projectConfiguration,
  wfIdentifier,
  workflowRmd,
  fileNameReplacements = c()
)
}
\arguments{
\item{projectConfiguration}{An object of class `projectConfiguration` that contains various configuration details,
including paths for input files, output directories, and any other relevant settings
required for the workflow export.}

\item{wfIdentifier}{A unique identifier (integer) for the workflow. This identifier is used to distinguish
this workflow from others and is included in the names of the exported files.}

\item{workflowRmd}{Path to the input markdown file for the TLF workflow. This file should contain the necessary
code chunks that are to be extracted and evaluated for the export process.}

\item{fileNameReplacements}{An optional character vector that specifies replacements for file names.
The vector should contain pairs of values, where the first value in each
pair represents the original file name, and the second value represents
the desired replacement name. This allows for customization of exported file names
to meet specific naming conventions or requirements. For files not listed in this
variable, the source filename is converted to a valid filename.}
}
\value{
Invisible NULL. The function does not return any value but performs a series of operations
        that result in the creation of exported files and configurations necessary for the ePackage.
        If successful, the function will complete without errors; otherwise, it will raise an informative error.
}
\description{
This function facilitates the export of a TLF (Table-Linked Format) workflow to an electronic package (ePackage).
It initializes a `WorkflowScriptExporter` object, extracts code chunks from the provided R Markdown file,
evaluates the code chunks, and executes a series of operations to prepare the workflow for export.
This includes generating workflow text, retrieving input files, configuring scenario details, and exporting necessary files.
}
\examples{
\dontrun{
# Example usage of exportTLFWorkflowToEPackage function
exportTLFWorkflowToEPackage(
  projectConfiguration = projectConfiguration,
  wfIdentifier = 1,
  workflowRmd = "path/to/workflow.Rmd",
  fileNameReplacements = c("oldName.pkml", "new_name.pkml")
)
}
}
\seealso{
Other electronic package: 
\code{\link{exportSimulationWorkflowToEPackage}()},
\code{\link{importWorkflow}()}
}
\concept{electronic package}
