% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-plot.R
\name{runPlot}
\alias{runPlot}
\title{Run Plot Function}
\usage{
runPlot(
  projectConfiguration,
  functionKey = NULL,
  plotFunction = NULL,
  subfolder = NULL,
  configTableSheet = NULL,
  plotNames = NULL,
  inputs = list()
)
}
\arguments{
\item{projectConfiguration}{A ProjectConfiguration object containing the project configuration settings. This should include paths to input files and output directories.}

\item{functionKey}{A character string that selects the plot function to use. Valid options depend on the available plot functions in your project. If NULL, a plot function must be provided via `plotFunction`.}

\item{plotFunction}{An optional function to be used for plotting. If provided, this will override the selection made by `functionKey`.}

\item{subfolder}{A character string specifying the subfolder where results will be saved. If `functionKey` is used, the default value will be the sheet name of the plot configuration.}

\item{configTableSheet}{A character string representing the name of the sheet in the configuration table from which to read plot configurations.}

\item{plotNames}{A character vector of plot names to filter which plots should be generated. If provided, the Rmd export is suppressed, and the function returns a list of generated plots instead of creating an Rmd file. If NULL, all plots specified in the configuration will be processed and exported to the Rmd file.}

\item{inputs}{A list of additional inputs for the plotting functions. This can include any parameters that the selected plot function requires.}
}
\value{
An invisible list of plots generated by the function. Each element in the list corresponds to a plot created during the execution. If `plotNames` is provided, the Rmd export is suppressed, and only the plot list is returned.
}
\description{
This function generates .Rmd files for creating plots based on user-defined configurations.
It reads the specified configuration table, evaluates the selected plot function, and manages
the output of plots and tables.
}
\details{
The `runPlot` function is designed to facilitate the generation of plots based on configurations defined in a specified configuration table. The function will:
- Load the configuration table for plots based on the specified sheet name.
- Validate the configuration and ensure that all required parameters are provided.
- Execute the designated plot function, either selected by `functionKey` or provided directly via `plotFunction`.
- Save the generated plots in the specified subfolder.
- Handle errors during plot generation, allowing for graceful degradation and warnings instead of halting execution.

If the `plotNames` parameter is set, the function will suppress the Rmd export and return a list of plots generated instead. This is useful when you want to generate specific plots without creating an accompanying .Rmd file.

Users can utilize the `openFigureTemplate` function to open a template for creating custom plot functions. This function can be called directly:
```r
openFigureTemplate()
```
Additionally, the template is available as an RStudio Add-in for easy access.
}
\examples{

\dontrun{
# Run the plot generation function with Rmd export
runPlot(
  projectConfiguration = projectConfiguration,
  functionKey = "TimeProfiles",
  subfolder = "TimeProfiles",
  configTableSheet = "TimeProfiles",
  inputs = list(dataObserved = dataObserved,scenarioResults = scenarioResults)
)

# Run the plot generation function without Rmd export, returning a plot list
plotList <- runPlot(
  projectConfiguration = projectConfiguration,
  functionKey = "TimeProfiles",
  subfolder = "TimeProfiles",
  configTableSheet = "TimeProfiles",
  plotNames = c("Plot1", "Plot2"),
  inputs = list(dataObserved = dataObserved,scenarioResults = scenarioResults)
)
}

}
