% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-testProject.R
\name{buildTestData}
\alias{buildTestData}
\title{Build Test Project Directory}
\usage{
buildTestData(rootDirectory = NULL, verbose = FALSE, writeTestData)
}
\arguments{
\item{rootDirectory}{A character string specifying the root directory for the test project.
If NULL (default), a temporary directory will be created.}

\item{verbose}{A logical value indicating whether to print messages about the process.
Defaults to FALSE.}

\item{writeTestData}{A logical value indicating whether newly created testdata should be filed to the inst directory of the package.}
}
\value{
A list containing:
  - `projectConfiguration`: The configuration of the initialized project.
  - `scenarioList`: A list of scenarios initialized for the project.
  - `scenarioResults`: The results from running the scenarios.
}
\description{
This function sets up a test project directory for the `ospsuite.reportingframework` package.
It initializes the project structure, configures scenarios, and handles necessary file
synchronization for testing and development purposes. It can be used in both development
mode and testing environments.
}
\details{
The function performs the following steps:
1. Initializes the project structure.
2. Cleans up existing data and sets up mock manual edits on project configuration.
3. Synchronizes directories for models and populations.
4. Exports defined populations and runs simulations for scenarios.
5. In development mode, it synchronizes simulation results and PK analysis results back
   to the development directory.
}
\examples{
# Example usage in package development
if (writeTestData) {
  testProject <- buildTestProjectory(verbose = TRUE, writeTestData = TRUE)
}

# Example usage in setup.R for tests
testSetup <- buildTestProjectory(rootDirectory = "path/to/testdirectory", verbose = TRUE)
projectdirectory <- testSetup$projectConfiguration
scenarioList <- testSetup$scenarioList

# Example usage in vignettes
\dontrun{
  vignetteSetup <- buildTestProjectory(verbose = TRUE)
  # Use vignetteSetup$projectConfiguration and vignetteSetup$scenarioList as needed
}

}
