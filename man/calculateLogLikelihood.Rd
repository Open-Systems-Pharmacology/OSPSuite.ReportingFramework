% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-timeprofile.R
\name{calculateLogLikelihood}
\alias{calculateLogLikelihood}
\title{Calculate Log Likelihood}
\usage{
calculateLogLikelihood(
  yValue,
  predicted,
  model,
  sigma,
  isCensored,
  lloq,
  lowerBound = 0
)
}
\arguments{
\item{yValue}{A numeric vector of observed values. These are the actual measurements that
will be compared against the predicted values.}

\item{predicted}{A numeric vector of predicted values. These values represent the expected
measurements based on the model.}

\item{model}{A string indicating the error model type. Options include:
- "absolute": Assumes absolute errors in predictions.
- "proportional": Assumes proportional errors in predictions.
- "log_absolute": Assumes log-transformed absolute errors.}

\item{sigma}{A numeric value representing the standard deviation of the error term
in the model, which quantifies the uncertainty in predictions.}

\item{isCensored}{A logical indicating if the data is censored. If TRUE, the function
will apply the appropriate calculations for censored data.}

\item{lloq}{A numeric value representing the lower limit of quantification. This is
the lowest concentration of a substance that can be reliably measured.}

\item{lowerBound}{A numeric value representing the lower bound for the predictions.
Values below this threshold will return a log likelihood of negative
infinity. Default is 0.}
}
\value{
A numeric value representing the log likelihood of the observed data given
        the predicted values. If the data is censored, the log likelihood is computed
        based on the probabilities of falling below the lower limit of quantification.
        If the predictions are below the lower bound, the function returns negative
        infinity, indicating an invalid scenario.
}
\description{
This function calculates the log likelihood of observed values given predicted values
based on the specified error model. It accounts for both censored and uncensored data
and allows for different modeling approaches (absolute, proportional, log-transformed).
}
\details{
The log likelihood is a measure of how well the predicted values explain the observed
data, with higher values indicating a better fit. The function can handle censored data.
This function is typically called within the `data.table` context (see example below)
}
\examples{
\dontrun{
library(data.table)

# Create a sample data.table
dt <- data.table(
  yValue = c(1.0, 2.0, 3.0),
  predicted = c(1.1, 2.1, 3.1),
  errorModel = c("absolute", "proportional", "log_absolute"),
  sigma = c(0.5, 0.5, 0.5),
  isCensored = c(FALSE, FALSE, TRUE),
  lloq = c(1.0, 1.0, 1.0)
)

# Calculate log likelihood for each row
dt[, logLikelihood := mapply(calculateLogLikelihood, yValue, predicted, errorModel, sigma, isCensored, lloq)]

# View results
print(dt)
}

}
